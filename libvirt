#!/bin/bash

# Function to display messages in color
print_message() {
    COLOR=$1
    TEXT=$2
    NC='\033[0m' # No Color
    printf "${COLOR}${TEXT}${NC}\n"
}

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'

# Check if yay is installed
if ! command -v yay &> /dev/null; then
    print_message $RED "Error: yay is not installed. Please install yay first."
    exit 1
fi

# Check if iptables is installed and replace it with iptables-nft if it is
if pacman -Qi iptables &> /dev/null; then
    print_message $YELLOW "Replacing iptables with iptables-nft..."
    sudo pacman -Rns --noconfirm iptables && \
    sudo pacman -S --needed --noconfirm iptables-nft && \
    print_message $GREEN "iptables replaced with iptables-nft successfully." || \
    { print_message $RED "Error replacing iptables."; exit 1; }
else
    print_message $YELLOW "iptables not found. Installing iptables-nft..."
    sudo pacman -S --needed --noconfirm iptables-nft && \
    print_message $GREEN "iptables-nft installed successfully." || \
    { print_message $RED "Error installing iptables-nft."; exit 1; }
fi

# Install virtualization related packages
print_message $YELLOW "Installing virtualization related packages..."
if yay -Syyu --needed --noconfirm virt-manager qemu-desktop libvirt edk2-ovmf dnsmasq iptables-nft; then
    print_message $GREEN "Virtualization packages installed successfully."
else
    print_message $RED "Error installing virtualization packages."
    exit 1
fi

# Configure libvirt and qemu
print_message $YELLOW "Configuring libvirt and qemu..."

# Append settings to /etc/libvirt/libvirtd.conf
{
    echo "unix_sock_rw_perms = \"0770\""
    echo "unix_sock_group = \"libvirt\""
} | sudo tee -a /etc/libvirt/libvirtd.conf &>/dev/null

# Create the libvirt configuration directory and set default URI
mkdir -p ~/.config/libvirt/ && \
echo 'uri_default = "qemu:///system"' >> ~/.config/libvirt/libvirt.conf

# Add the current user to the libvirt group
newgrp libvirt
sudo usermod -aG libvirt $USER

# Set the user and group in qemu.conf to the current user and group
USER_GROUP=$(id -gn $USER)
sudo sed -i "/^#user/c\user = \"$USER\"" /etc/libvirt/qemu.conf && \
sudo sed -i "/^#group/c\group = \"$USER_GROUP\"" /etc/libvirt/qemu.conf && \
print_message $GREEN "libvirt and qemu configured successfully." || \
{ print_message $RED "Error configuring libvirt and qemu."; exit 1; }

# Enable and restart the libvirtd service
print_message $YELLOW "Enabling and restarting libvirtd service..."
if sudo systemctl enable libvirtd.service && sudo systemctl restart libvirtd.service; then
    print_message $GREEN "libvirtd service enabled and restarted successfully."
else
    print_message $RED "Error managing libvirtd service."
    exit 1
fi

# Start the default virtual network
print_message $YELLOW "Starting the default virtual network..."
if sudo virsh net-start default; then
    print_message $GREEN "Default virtual network started successfully."
else
    print_message $RED "Error starting the default virtual network."
    exit 1
fi

print_message $GREEN "Virtualization environment setup completed successfully."
